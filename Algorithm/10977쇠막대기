//쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다. - 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.
//        각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.
//        레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.
//        아래 그림은 위 조건을 만족하는 예를 보여준다. 수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향이다.
//레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ‘( ) ’ 으로 표현된다. 또한, 모든 ‘( ) ’는 반드시 레이저를 표현한다.
//        쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다.
//        위 예의 괄호 표현은 그림 위에 주어져 있다. 개소리야시발
//        쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.
//        쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.
//한 줄에 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다.
//잘려진 조각의 총 개수를 나타내는 정수를 한 줄에 출력한다.

// '('가 생기면 막대기가 하나 생긴거로 인식
// '('바로 다음 ')'가 나오면 레이저로 인식 막대기 개수 관여X
// ')'가 생기면 막대기가 하나 끝난거로 인식
// 레이저가 아닌 '('가 들어오면 스택에 +1 이후 레이저가 오면 스택에 있는값 output에 추가 스택건들ㄴㄴ
// 레이저가 아닌 ')'가 들어오면 스택에 -1 막대기하나가 끝났다는(또는 잘려서 생성) 의미이므로 output에 +1

package BaekJoon201;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.util.Stack;

public class IronBar {
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int output= 0;
        Stack<Character> stack = new Stack<>();

        String input = br.readLine();
        for(int i = 0; i<input.length(); i++){
            if(input.charAt(i) == '('){
                stack.push('(');
            }else{ // ')'가 들어왔을 때
                stack.pop();
                if(input.charAt(i-1) == '('){ //레이저
                    output += stack.size(); // 스택안의 개수가 레이저로 잘린 쇠막대기 개수
                }else{ // ')'뒤에 또 ')'가 왔을때
                    output++;
                }
            }
        }
        bw.write(output+"");
        bw.flush();
        bw.close();
    }
}
